extends ../layout/layout

block contenido
  .content-wrapper
    .content-header
      .container-fluid
        .row
          .col-12.col-sm-6.col-md-3
            .info-box
              span.info-box-icon.bg-info.elevation-1
                i.fas.fa-file-invoice
              .info-box-content
                span.info-box-text Pendientes de pago
                span.info-box-number
                  | 18
          .col-12.col-sm-6.col-md-3
            .info-box.mb-3
              span.info-box-icon.bg-info.elevation-1
                i.fas.fa-dollar-sign
              .info-box-content
                span.info-box-text Monto pendiente
                span.info-box-number $5.410.567
          .clearfix.hidden-md-up
          .col-12.col-sm-6.col-md-3
            .info-box.mb-3
              span.info-box-icon.bg-warning.elevation-1
                i.fas.fa-file-invoice
              .info-box-content
                span.info-box-text A vencer (7 días)
                span.info-box-number 5
          .col-12.col-sm-6.col-md-3
            .info-box.mb-3
              span.info-box-icon.bg-warning.elevation-1
                i.fas.fa-dollar-sign
              .info-box-content
                span.info-box-text Monto a vencer (7 días)
                span.info-box-number $1.800.000

        .row.mb-2
          .col-sm-6
            h1.m-0 Facturas Recibidas
          .col-sm-6.text-right
            button.btn.btn-success(data-toggle="modal" data-target="#addFacturaModal") 
              i.fas.fa-plus
              |  Nueva Factura
            button.btn.btn-primary.btn-sm.mx-2(data-toggle="modal" data-target=`#crearModal`) 
              i.fas.fa-plus
              |  Crear Producto

    section.content
      .container-fluid
        table#facturasTable.table.table-striped
          thead
            tr
              th Fecha de Ingreso
              th Número
              th Proveedor
              th Monto
              th Estado de Pago
              th Acciones
          tbody
            each factura, index in facturas
              tr
                td= factura.fecha_emision.toLocaleDateString('es-ES', { day: '2-digit', month: '2-digit', year: 'numeric' })
                td= factura.numero_factura
                td= factura.proveedor.nombre_proveedor
                td= '$' + Math.floor(factura.monto).toLocaleString('es-ES')
                td= factura.estado_pago ? 'Pagado' : 'Pendiente'
                td
                  button.btn.btn-primary.btn-sm.mx-2(data-toggle="modal" data-target=`#detalleModal${index}`) 
                    i.fas.fa-eye
                  button.btn.btn-danger.btn-sm.mx-2(data-toggle="modal" data-target=`#crearModal${index}`) 
                    i.fas.
                    | Eliminar


                  .modal.fade(id=`detalleModal${index}` tabindex="-1" role="dialog")
                    .modal-dialog.modal-lg(role="document")
                      .modal-content
                        .modal-header
                          h5.modal-title Detalles de Factura - #{factura.numero_factura}
                          button.close(type="button" data-dismiss="modal" aria-label="Close")
                            span(aria-hidden="true") &times;
                        .modal-body
                          p Número de Factura: #{factura.numero_factura}
                          p Fecha de Emisión: #{factura.fecha_emision.toLocaleDateString('es-ES')}
                          p Proveedor: #{factura.proveedor.nombre_proveedor}
                          p Monto: #{factura.monto.toLocaleString('es-ES', { style: 'currency', currency: 'CLP' })}
                          p Estado de Pago: #{factura.estado_pago ? 'Pagado' : 'Pendiente'}
                          
                          // Section to Add Products to the Invoice

                          // Lista de productos añadidos a la factura
                          h5.mt-4 Productos en la Factura
                          table.table.table-bordered
                            thead
                              tr
                                th Producto
                                th Cantidad
                                th Precio Unitario
                                th Subtotal
                            tbody#productosTabla
                              each detalle in factura.detalle_factura
                                tr
                                  td= detalle.producto.nombre_producto
                                  td= detalle.cantidad
                                  td= detalle.precio.toLocaleString('es-ES', { style: 'currency', currency: 'CLP' })
                                  td= (detalle.cantidad * detalle.precio).toLocaleString('es-ES', { style: 'currency', currency: 'CLP' })
                          
                          //- Resumen de la factura
                          .mt-4.text-right
                            - var subtotal = factura.detalle_factura.reduce((acc, detalle) => acc + (detalle.cantidad * detalle.precio), 0);
                            - var impuesto = subtotal * 0.19;
                            - var total = subtotal + impuesto;
                            h5 Subtotal: #{subtotal.toLocaleString('es-ES', { style: 'currency', currency: 'CLP' })}
                            h5 Impuesto (19%): #{impuesto.toLocaleString('es-ES', { style: 'currency', currency: 'CLP' })}
                            h5 Total a Pagar: #{total.toLocaleString('es-ES', { style: 'currency', currency: 'CLP' })}


                          h5.mt-4 Agregar Productos a la Factura

                          // Formulario para agregar productos existentes a la factura
                          form#addExistingProductForm(onsubmit=`agregarProductoAFactura(event, ${factura.id}, ${index})`)
                            input(id=id=`token-${index}` type="hidden" name="_csrf" value=csrfToken)
                            input(type="hidden" id="facturaId" value=factura.id)

                            // Desplegable de Productos
                            .form-group
                              label(for="producto") Producto
                              //select#producto.form-control(name="producto_id" required)
                              //select#producto-#{index}.form-control(name="producto_id" required)
                              select.form-control(id=`producto-${index}` name="producto_id" required)
                                option(value="") Seleccionar Producto
                                each producto in productos
                                  option(value=producto.id)= producto.nombre_producto
                            // Campo de Precio
                            .form-group
                              label(for="precio") Precio Unitario
                              //input#precio.form-control(type="number" step="0.01" name="precio" placeholder="Ingrese precio" required)
                              //input#precio-#{index}.form-control(type="number" name="precio" required)
                              input.form-control(id=`precio-${index}` type="number" step="0.01" name="precio" placeholder="Ingrese precio" required)


                            // Campo de Cantidad
                            .form-group
                              label(for="cantidad") Cantidad
                              //input#cantidad.form-control(type="number" name="cantidad" placeholder="Ingrese cantidad" required)
                              //input#cantidad-#{index}.form-control(type="number" name="cantidad" required)
                              input.form-control(id=`cantidad-${index}` type="number" name="cantidad" placeholder="Ingrese cantidad" required)

                            // Botón para agregar producto a la factura
                            button.btn.btn-primary.mt-2(
                              type="button" 
                              onclick=`agregarProductoAFactura(event, '${factura.id}', ${index})`
                            ) Agregar Producto



                        .modal-footer
                          button.btn.btn-secondary(type="button" data-dismiss="modal") Cerrar


        .modal.fade#addFacturaModal(tabindex="-1" role="dialog")
          .modal-dialog.modal-lg(role="document")
            .modal-content
              .modal-header
                h5.modal-title Nueva Factura
                button.close(type="button" data-dismiss="modal" aria-label="Close")
                  span(aria-hidden="true") &times;
              .modal-body
                form(action="/finanzas/facturas_recibidas/agregar" method="POST")
                  input(type="hidden" name="_csrf" value=csrfToken)
                  
                  // Número de Factura
                  .form-group
                    label(for="numero_factura") Número de Factura
                    input#numero_factura.form-control(type="text" name="numero_factura" required)

                  // Fecha de Emisión
                  .form-group
                    label(for="fecha_emision") Fecha de Emisión
                    input#fecha_emision.form-control(type="date" name="fecha_emision" required)

                  // Fecha de Vencimiento
                  .form-group
                    label(for="fecha_vencimiento") Fecha de Vencimiento
                    input#fecha_vencimiento.form-control(type="date" name="fecha_vencimiento" required)

                  // Proveedor
                  .form-group
                    label(for="proveedor") Proveedor
                    select#proveedor.form-control(name="proveedor_id" required)
                      each proveedor in proveedores
                        option(value=proveedor.id)= proveedor.nombre_proveedor

                  // Monto
                  .form-group
                    label(for="monto") Monto
                    input#monto.form-control(type="number" step="0.01" name="monto" required)

                  // Forma de Pago
                  .form-group
                    label(for="forma_pago") Forma de Pago
                    select#forma_pago.form-control(name="forma_pago" required)
                      option(value="efectivo") Efectivo
                      option(value="transferencia") Transferencia
                      option(value="tarjeta") Tarjeta
                      option(value="cheque") Cheque

                  // Estado de Pago
                  .form-group
                    label(for="estado_pago") Estado de Pago
                    select#estado_pago.form-control(name="estado_pago" required)
                      option(value="1") Pagado
                      option(value="0") Pendiente

                  button.btn.btn-primary(type="submit") Guardar
              .modal-footer
                button.btn.btn-secondary(type="button" data-dismiss="modal") Cerrar

    // Scripts for DataTables and handling new product creation
    script(src="https://code.jquery.com/jquery-3.3.1.min.js")
    script(src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js")
    script(src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js")
    script(src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js")
    script.
      new DataTable('#facturasTable', {
        "language": {
          "url": "https://cdn.datatables.net/plug-ins/1.11.5/i18n/es-ES.json",
        }
      })

      $('#producto').on('change', function() {
        if (this.value === 'nuevo') {
          $('.new-product-fields').show();
        } else {
          $('.new-product-fields').hide();
        }
      })

    script.
      function agregarProductoAFactura(event,  facturaId, index) {
        event.preventDefault();

        const modal = document.querySelector(`#detalleModal${index}`);
          if (!modal) {
            console.error(`No se encontró el modal con ID: detalleModal${index}`);
            return;
          }

        // Verificar si el modal existe
        const productoElement = document.querySelector(`#producto-${index}`);
        const cantidadElement = document.querySelector(`#cantidad-${index}`);
        const precioElement = document.querySelector(`#precio-${index}`);
       const csrfToken = modal.querySelector("input[name='_csrf']")?.value;

        if (!productoElement || !cantidadElement || !precioElement) {
          console.error(`No se encontró el elemento necesario dentro del modal con ID detalleModal${facturaId}`);
          return;
        }

        const productoId = productoElement.value;
        const cantidad = parseFloat(cantidadElement.value);
        const precio = parseFloat(precioElement.value);


        const data = {
          producto_id: productoId,
          cantidad: parseFloat(cantidad),
          precio: parseFloat(precio),
          _csrf: csrfToken
        };

        fetch(`/finanzas/facturas_recibidas/${facturaId}/agregar_producto`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'CSRF-Token': csrfToken,
            'X-Requested-With': 'XMLHttpRequest'
          },
          body: JSON.stringify(data)
        })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              actualizarTablaProductos(data.detalle, index); // Actualiza la tabla con los nuevos valores
              actualizarResumenFactura(data.nuevoResumen, index); // Actualiza el resumen con los nuevos valores
            } else {
              alert(data.message || 'Error al agregar producto');
            }
          })
          .catch(error => console.error('Error al agregar producto:', error));
      }

      function actualizarTablaProductos(detalle, index) {
        const tablaProductos = document.querySelector(`#detalleModal${index} tbody#productosTabla`);
        
        if (!tablaProductos) {
          console.error('No se encontró la tabla de productos.');
          return;
        }

        const nuevaFila = document.createElement('tr');
        nuevaFila.innerHTML = `
          <td>${detalle.producto.nombre_producto || 'Producto no disponible'}</td>
          <td>${detalle.cantidad}</td>
          <td>${detalle.precio.toLocaleString('es-ES', { style: 'currency', currency: 'CLP' })}</td>
          <td>${(detalle.cantidad * detalle.precio).toLocaleString('es-ES', { style: 'currency', currency: 'CLP' })}</td>
        `;

        // Agregar fila a la tabla del modal específico
        tablaProductos.appendChild(nuevaFila);
      }

      function actualizarResumenFactura(nuevoResumen, index) {
        const modal = document.querySelector(`#detalleModal${index}`);
        if (!modal) return;

        modal.querySelector('.text-right h5:nth-child(1)').textContent = 
          `Subtotal: ${nuevoResumen.subtotal.toLocaleString('es-ES', { style: 'currency', currency: 'CLP' })}`;
        modal.querySelector('.text-right h5:nth-child(2)').textContent = 
          `Impuesto (19%): ${nuevoResumen.impuesto.toLocaleString('es-ES', { style: 'currency', currency: 'CLP' })}`;
        modal.querySelector('.text-right h5:nth-child(3)').textContent = 
          `Total a Pagar: ${nuevoResumen.total.toLocaleString('es-ES', { style: 'currency', currency: 'CLP' })}`;
      }
