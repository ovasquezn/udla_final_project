extends ../layout/layout

block contenido
  .content-wrapper
    .content-header
      .container-fluid
        .row.mb-2
          .col-sm-6
            h1 Productos
          .col-sm-6.text-right
            button.btn.btn-success(data-toggle="modal" data-target="#addProductoModal")
              i.fas.fa-plus
              |  Crear Nuevo Producto

    section.content
      .container-fluid
        table#productosTable.table.table-striped
          thead
            tr
              th Código de Barra
              th Codigo Interno
              th Nombre
              th Inventario Asociado
              th Unidad 
              th Formato 
              th Acciones
          tbody
            each producto in productos
              tr
                td= producto.codigo_barra
                td= producto.codigo_interno
                td= producto.nombre_producto
                td= producto.inventario ? producto.inventario.nombre : 'No especificado'
                td Unidad
                td Formato
                td
                  button.btn.btn-primary.btn-sm.mx-2(data-toggle="modal" data-target=`#detalleModal${index}`) 
                    i.fas.fa-eye

        // Modal para agregar un nuevo producto
        .modal.fade#addProductoModal(tabindex="-1" role="dialog")
          .modal-dialog.modal-lg(role="document")
            .modal-content
              .modal-header
                h5.modal-title Crear Nuevo Producto
                button.close(type="button" data-dismiss="modal" aria-label="Close")
                  span(aria-hidden="true") &times;
              // Contenedor para errores (oculto inicialmente)
              .alert.alert-danger#addProductoErrors(style="display:none")
              .modal-body
                form#addProductoForm(action="/inventario/productos/crear_producto" method="POST" novalidate)
                  input(type="hidden" name="_csrf" value=csrfToken)
                  
                  .form-group 
                    label(for="codigo_de_barra") Código de Barra
                    input#codigo_de_barra.form-control(type="text" name="codigo_barra" placeholder="Ingrese código de barra" required)
                    
                  .form-group
                    label(for="nombre_producto") Nombre del Producto
                    input#nombre_producto.form-control(type="text" name="nombre_producto" placeholder="Ingrese nombre del producto" required)

                  .form-group
                    label(for="inventario") Inventario
                    select#inventario.form-control(name="inventario_id" required)
                      each inventario in inventarios
                        option(value=inventario.id)= inventario.nombre

                  button.btn.btn-primary(type="submit") Crear Producto
              .modal-footer
                button.btn.btn-secondary(type="button" data-dismiss="modal") Cerrar

  script(src="https://code.jquery.com/jquery-3.3.1.min.js")
  script(src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js")
  script(src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js")
  script(src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js")

  script.
    $(document).ready(function() {
      $('#productosTable').DataTable({
        language: {
          url: "https://cdn.datatables.net/plug-ins/1.11.5/i18n/es-ES.json",
        },
        ordering: true,
      });
    });

    document.addEventListener('DOMContentLoaded', () => {
      const addProductoForm = document.getElementById('addProductoForm');
      const addProductoErrors = document.getElementById('addProductoErrors');

      addProductoForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        // Limpiar errores previos
        addProductoErrors.style.display = 'none';
        addProductoErrors.innerHTML = '';

        const formData = new FormData(addProductoForm);
        const data = {};
        formData.forEach((value, key) => {
          data[key] = value;
        });

        try {
          const res = await fetch(addProductoForm.action, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'CSRF-Token': data._csrf
            },
            body: JSON.stringify(data)
          });

          const result = await res.json();
          if (!result.success) {
            // Mostrar errores
            if (result.errors && result.errors.length > 0) {
              addProductoErrors.style.display = 'block';
              const ul = document.createElement('ul');
              result.errors.forEach(err => {
                const li = document.createElement('li');
                li.textContent = err.msg;
                ul.appendChild(li);
              });
              addProductoErrors.appendChild(ul);
            } else if (result.message) {
              addProductoErrors.style.display = 'block';
              addProductoErrors.textContent = result.message;
            }
          } else {
            // Éxito: cerrar el modal
            $('#addProductoModal').modal('hide');
            // Opcional: recargar la página para ver el producto creado
            location.reload();
          }

        } catch (error) {
          console.error('Error al enviar el formulario:', error);
          addProductoErrors.style.display = 'block';
          addProductoErrors.textContent = 'Ocurrió un error al procesar la solicitud.';
        }
      });
    });
